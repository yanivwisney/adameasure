"""Fix model relationships

Revision ID: c8780dbe3623
Revises: b01ff8986e83
Create Date: 2025-07-12 10:33:58.667338

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "c8780dbe3623"
down_revision = "b01ff8986e83"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "beds",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("farm_id", sa.Integer(), nullable=False),
        sa.Column("width", sa.Float(), nullable=True),
        sa.Column("length", sa.Float(), nullable=True),
        sa.Column("area", sa.Float(), nullable=True),
        sa.Column("soil_type", sa.String(length=100), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["farm_id"],
            ["farms.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_beds_id"), "beds", ["id"], unique=False)
    op.create_table(
        "lines",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("bed_id", sa.Integer(), nullable=False),
        sa.Column("position", sa.Integer(), nullable=False),
        sa.Column("length", sa.Float(), nullable=True),
        sa.Column("width", sa.Float(), nullable=True),
        sa.Column("spacing", sa.Float(), nullable=True),
        sa.Column("area", sa.Float(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["bed_id"],
            ["beds.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_lines_id"), "lines", ["id"], unique=False)
    op.create_table(
        "plantings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("crop_id", sa.Integer(), nullable=False),
        sa.Column("farm_id", sa.Integer(), nullable=False),
        sa.Column("bed_id", sa.Integer(), nullable=False),
        sa.Column("line_id", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("planted_date", sa.DateTime(), nullable=False),
        sa.Column("expected_harvest_date", sa.DateTime(), nullable=True),
        sa.Column("actual_harvest_date", sa.DateTime(), nullable=True),
        sa.Column("harvested_quantity", sa.Float(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["bed_id"],
            ["beds.id"],
        ),
        sa.ForeignKeyConstraint(
            ["crop_id"],
            ["crops.id"],
        ),
        sa.ForeignKeyConstraint(
            ["farm_id"],
            ["farms.id"],
        ),
        sa.ForeignKeyConstraint(
            ["line_id"],
            ["lines.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_plantings_id"), "plantings", ["id"], unique=False)
    op.create_table(
        "harvests",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("planting_id", sa.Integer(), nullable=False),
        sa.Column("farm_id", sa.Integer(), nullable=False),
        sa.Column("bed_id", sa.Integer(), nullable=False),
        sa.Column("line_id", sa.Integer(), nullable=False),
        sa.Column("crop_id", sa.Integer(), nullable=False),
        sa.Column("harvest_date", sa.DateTime(), nullable=False),
        sa.Column("harvested_quantity", sa.Float(), nullable=False),
        sa.Column("quality_rating", sa.Integer(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("days_early_late", sa.Integer(), nullable=True),
        sa.Column("expected_harvest_date", sa.DateTime(), nullable=True),
        sa.Column("expected_yield", sa.Float(), nullable=True),
        sa.Column("yield_percentage", sa.Float(), nullable=True),
        sa.Column("weather_conditions", sa.String(length=100), nullable=True),
        sa.Column("harvest_method", sa.String(length=50), nullable=True),
        sa.Column("harvested_by", sa.String(length=100), nullable=True),
        sa.Column("is_complete", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["bed_id"],
            ["beds.id"],
        ),
        sa.ForeignKeyConstraint(
            ["crop_id"],
            ["crops.id"],
        ),
        sa.ForeignKeyConstraint(
            ["farm_id"],
            ["farms.id"],
        ),
        sa.ForeignKeyConstraint(
            ["line_id"],
            ["lines.id"],
        ),
        sa.ForeignKeyConstraint(
            ["planting_id"],
            ["plantings.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_harvests_id"), "harvests", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_harvests_id"), table_name="harvests")
    op.drop_table("harvests")
    op.drop_index(op.f("ix_plantings_id"), table_name="plantings")
    op.drop_table("plantings")
    op.drop_index(op.f("ix_lines_id"), table_name="lines")
    op.drop_table("lines")
    op.drop_index(op.f("ix_beds_id"), table_name="beds")
    op.drop_table("beds")
    # ### end Alembic commands ###
